<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="https://kunalnagar.in/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kunalnagar.in/" rel="alternate" type="text/html" /><updated>2018-10-13T13:37:23+05:30</updated><id>https://kunalnagar.in/</id><title type="html">Kunal Nagar</title><subtitle>Front-end web developer based in Bangalore, currently working at ScaleGrid.</subtitle><entry><title type="html">Block Ads in Skype</title><link href="https://kunalnagar.in/blog/block-ads-skype/" rel="alternate" type="text/html" title="Block Ads in Skype" /><published>2018-10-13T00:00:00+05:30</published><updated>2018-10-13T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/block-ads-skype</id><content type="html" xml:base="https://kunalnagar.in/blog/block-ads-skype/">&lt;p&gt;I hate ads. So much so that I’ve created a &lt;a href=&quot;https://chrome.google.com/webstore/detail/adstomp/omoobfkabeoablabejdmodnablfjjbch?hl=en&quot;&gt;Chrome Extension&lt;/a&gt; to block them at some sites I visit regularly. But then I realized the best way to stop these things is at the source itself. Enter the hosts file.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Side note:&lt;/b&gt; If you’re a privacy nut, you might want to check out my &lt;a href=&quot;/assets/downloads/siteblock.txt&quot;&gt;hosts&lt;/a&gt; file. It will block crypto-miners, google ads, youtube ads and much more. As always, &lt;a href=&quot;mailto:knlnagar@gmail.com&quot;&gt;feedback&lt;/a&gt; is appreciated.&lt;/p&gt;

&lt;p&gt;I figured out a way to block Skype ads using a handful of host file entries. Download a &lt;a href=&quot;/assets/downloads/2018-10-13-block-ads-skype/hosts-skype.txt&quot;&gt;.txt&lt;/a&gt; version here. I’ve mentioned them below if you want to take a look. These entries have been tested on the latest Skype version as of today (October 13, 2018).&lt;/p&gt;

&lt;pre&gt;
# Block Skype ads (core)
127.0.0.1 *.msads.net
127.0.0.1 *.msecn.net
127.0.0.1 *.rad.msn.com
127.0.0.1 a.ads2.msads.net
127.0.0.1 ac3.msn.com
127.0.0.1 ad.doubleclick.net
127.0.0.1 adnexus.net
127.0.0.1 adnxs.com
127.0.0.1 ads1.msn.com
127.0.0.1 ads2.msads.net
127.0.0.1 aka-cdn-ns.adtech.de

# If you want to see Skype Home, comment the line below
127.0.0.1 apps.skype.com

127.0.0.1 b.ads2.msads.net
127.0.0.1 bs.serving-sys.com
127.0.0.1 cdn.atdmt.com
127.0.0.1 cds26.ams9.msecn.net
127.0.0.1 db3aqu.atdmt.com
127.0.0.1 ec.atdmt.com
127.0.0.1 flex.msn.com
127.0.0.1 g.msn.com
127.0.0.1 live.rads.msn.com
127.0.0.1 msntest.serving-sys.com
127.0.0.1 rad.msn.com
127.0.0.1 sO.2mdn.net
127.0.0.1 secure.flashtalking.com
127.0.0.1 static.2mdn.net
127.0.0.1 static.2mdn.net
&lt;/pre&gt;

&lt;p&gt;The above host file entries will not remove the placeholders in the side bar. For that, you need to get technical.&lt;/p&gt;

&lt;p&gt;Based on your OS, go to: &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/skype/YOUR_USER_NAME/config.xml&lt;/code&gt; and set all &lt;code class=&quot;highlighter-rouge&quot;&gt;Advert&lt;/code&gt; related values to 0.&lt;/p&gt;

&lt;pre&gt;
&amp;lt;AdvertEastRailsEnabled&amp;gt;0&amp;lt;/AdvertEastRailsEnabled&amp;gt;
&amp;lt;AdvertLargeEastRailCutoff&amp;gt;0&amp;lt;/AdvertLargeEastRailCutoff&amp;gt;
&amp;lt;AdvertNorthRailCutoff&amp;gt;0&amp;lt;/AdvertNorthRailCutoff&amp;gt;
&amp;lt;AdvertPlaceholder&amp;gt;0&amp;lt;/AdvertPlaceholder&amp;gt;
&amp;lt;AdvertSmallEastRailCutoff&amp;gt;0&amp;lt;/AdvertSmallEastRailCutoff&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Reboot your system and your Skype ads should be gone. Didn’t work? Wrong hosts file entry? &lt;a href=&quot;mailto:knlnagar@gmail.com&quot;&gt;Tell me&lt;/a&gt; about it.&lt;/p&gt;</content><author><name></name></author><summary type="html">I hate ads. So much so that I’ve created a Chrome Extension to block them at some sites I visit regularly. But then I realized the best way to stop these things is at the source itself. Enter the hosts file.</summary></entry><entry><title type="html">YouTube to Mp3 converter</title><link href="https://kunalnagar.in/blog/youtube-to-mp3-converter/" rel="alternate" type="text/html" title="YouTube to Mp3 converter" /><published>2018-02-24T00:00:00+05:30</published><updated>2018-02-24T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/youtube-to-mp3-converter</id><content type="html" xml:base="https://kunalnagar.in/blog/youtube-to-mp3-converter/">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oA-D7TdjVnE&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So my parents listen to music on YouTube. Because apparently, services like &lt;a href=&quot;https://www.saavn.com/&quot;&gt;Saavn&lt;/a&gt; or &lt;a href=&quot;https://gaana.com/&quot;&gt;Gaana&lt;/a&gt; don’t make sense to them. And honestly, I can’t blame them. They’re gonna use what seems familiar to them.&lt;/p&gt;

&lt;p&gt;One day they asked me - how can I download this song to my phone and listen to it without opening the YouTube app? And I suggested numerous YouTube to Mp3 converters on the internet. The thing I missed was that my parents cannot differentiate between an actual download button and the one that is loaded with ads. Unfortunately, a lot of these free services have ads loaded on them and that causes popups like this that send my parents into a frenzy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/youtube-to-mp3-converter/youtube-to-mp3-converter-1.PNG&quot; alt=&quot;Sample Android Malware Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hence, I decided to create a converter for them that is ad-free and does the job. You enter a URL, click Convert and you get an mp3 file to download. From here on, I will be discussing how to build such a thing and what is the concept behind these converters and how they work. So if you’re not interested, shoo off.&lt;/p&gt;

&lt;p&gt;Alright. You’re interested in how to build such a thing. You can do this in any technology you want. I will be discussing the business logic first and then suggest doing it in Node.js - because that’s how I did it.&lt;/p&gt;

&lt;h2 id=&quot;business-logic&quot;&gt;Business Logic&lt;/h2&gt;
&lt;p&gt;A YouTube to Mp3 converter is quite simple, actually.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You use the YouTube API to send a URL and it sends you back a list of formats that the video is available in based on the quality when it was uploaded.&lt;/li&gt;
  &lt;li&gt;It returns a couple of standard formats like mp4, mov etc and one format called m4a.&lt;/li&gt;
  &lt;li&gt;We download that m4a and then use ffmpeg to convert it to mp3&lt;/li&gt;
  &lt;li&gt;And we’re done.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;implementing-in-nodejs&quot;&gt;Implementing in Node.js&lt;/h2&gt;
&lt;p&gt;Unless you’re really passionate about building this thing out, I would recommend using the already built Node packages out there for downloading and converting YouTube videos. There are node packages for doing this thing entirely as well. But you’re here to learn, so let’s convert out Business Logic to code. Here are the packages you’ll need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fent/node-ytdl-core&quot;&gt;node-ytdl-core&lt;/a&gt; for getting the YouTube info for a particular URL&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fluent-ffmpeg/node-fluent-ffmpeg&quot;&gt;node-fluent-ffmpeg&lt;/a&gt; to convert the received m4a file to mp3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As far as the backend, we’ll be using &lt;a href=&quot;https://expressjs.com/&quot;&gt;ExpressJS&lt;/a&gt; hosted on &lt;a href=&quot;https://heroku.com&quot;&gt;Heroku&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You’ll need to install &lt;a href=&quot;https://www.ffmpeg.org/&quot;&gt;ffmpeg&lt;/a&gt; on Heroku first for the node package to work. For that, you’ll need a &lt;a href=&quot;https://devcenter.heroku.com/articles/buildpacks&quot;&gt;Heroku Buildpack&lt;/a&gt;. I used &lt;a href=&quot;https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest&quot;&gt;this one&lt;/a&gt;. Basically, Heroku Buildpacks allow you to specify the technologies you will need for a specific project. By default, if you push Node.js code to Heroku, a Node.js Buildpack is automatically applied to your project. You can check out all the Buildpacks in your project on it’s Settings page.&lt;/p&gt;

&lt;p&gt;If you’re working on this locally, you’ll need to install ffmpeg on your machine as well. Here’s how you &lt;a href=&quot;https://github.com/fluent-ffmpeg/node-fluent-ffmpeg/wiki/Installing-ffmpeg-on-Mac-OS-X&quot;&gt;install it on a mac&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m not going to give away the code here, so that’s for you to figure out. I have suggested all the packages you might need and where to host it as well.&lt;/p&gt;

&lt;p&gt;If you have questions, please leave them in the comments below and I’ll be more than happy to answer.&lt;/p&gt;</content><author><name></name></author><category term="Open Source" /><category term="Woot" /><category term="Blah" /><summary type="html">Demo</summary></entry><entry><title type="html">My horrible experience with ACT Fibernet</title><link href="https://kunalnagar.in/blog/act-fibernet-horrible-experience/" rel="alternate" type="text/html" title="My horrible experience with ACT Fibernet" /><published>2017-06-24T00:00:00+05:30</published><updated>2017-06-24T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/act-fibernet-horrible-experience</id><content type="html" xml:base="https://kunalnagar.in/blog/act-fibernet-horrible-experience/">&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Contains more cursing than usual. Reader discretion is advised.&lt;/p&gt;

&lt;p&gt;May 13, 2015 - I move to an apartment in Bangalore to start my new job and get my own high speed internet connection, or as the cool kids say - Fibernet connection. I was so happy.&lt;/p&gt;

&lt;p&gt;I should note that I’m from Jaipur and we didn’t have these kinds of speeds there (for home use, ofcourse). The max that I could get was 4MBPS with 80GB of data and we paid INR 2200 per month for that shit. Fast forward to Bangalore, I got that speedtest connection in INR 1300 with taxes and 100GB of data. Pretty good, I say.&lt;/p&gt;

&lt;p&gt;Honestly, I was so excited about these “blazing fast” speeds that I paid for the entire package upfront - ANNUALLY. This post is to going to discuss why that was my biggest mistake ever. I believe you get the level of frustration here, when I’m banging on my keyboard typing this post on a fucking Sunday.&lt;/p&gt;

&lt;p&gt;Calming down in 3…2….&lt;/p&gt;

&lt;p&gt;FUCK THAT.&lt;/p&gt;

&lt;p&gt;ACT Fibernet is the worst fucking, dog shitting cunt of an ISP. Haven’t heard of them? GOOD, you’re safe. They’re hugely popular in Karnataka and Hyderabad and like a noob, I went with the hype and got an annual connection from them.&lt;/p&gt;

&lt;p&gt;It worked out fairly okay for the first year so I decided to continue the connection and paid annually AGAIN for the second year. Now, before you judge me I should point out that they did upgrade me from 30mbps to 60mbps and my data from 100GB to 170GB. I don’t know why, but that was enough to give me a digital hard-on.&lt;/p&gt;

&lt;p&gt;Before we get started, I should tell you guys about how their fiber network is laid out throughout the city. It’s not underground like major ISPs like Airtel, but in the fucking air, going over trees and stuff - and because of this dumb decision, they have fiber-cuts every time it rains heavily. I swear to god, my internet used to disconnect once every week with intermittent failures multiple times during the day.&lt;/p&gt;

&lt;h2 id=&quot;incident-1&quot;&gt;Incident 1&lt;/h2&gt;

&lt;p&gt;The trouble started in January 2017. One not-so fine day, as usual, the internet stopped working again in the morning. So I called up their Customer Service, waited on hold for 10 minutes and opened a support ticket. As always, I didn’t know what they did - but the issue was resolved in 2 hours. Come evening, the internet stopped working again and I reopened the same ticket. This same process went on for over a week when I finally called up the service engineer and blasted his brains off to figure out what the fuck was actually going on.&lt;/p&gt;

&lt;p&gt;Turns out, the battery for the switch box that was routing the connection to me was dying out because of which the box would get power at random times.&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/6yRVg0HWzgS88&quot; width=&quot;400&quot; height=&quot;407&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/facepalm-simon-cowell-6yRVg0HWzgS88&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Their electrician gave me a call saying that he replaced the battery for the box and all is working as expected. I got down from the roof and went to my room. All is good, for now.&lt;/p&gt;

&lt;p&gt;Imagine a shit ton of small things like these for 2 years and we arrive at THE ONE.&lt;/p&gt;

&lt;h2 id=&quot;incident-n---the-final-straw&quot;&gt;Incident n - THE FINAL STRAW&lt;/h2&gt;

&lt;p&gt;Take a guess - you’re probably right. THE INTERNET WENT OFF. AGAIN. So I called their customer service again, blah blah blah, ticket opened blah.&lt;/p&gt;

&lt;p&gt;The issue was fixed. But this time it was just over the top. I was really frustrated with everything that they had to offer - the speed was inconsistent, their customer service was shit and their backend engineers were completely useless in deciphering the actual issue.&lt;/p&gt;

&lt;p&gt;I applied for disconnection of service.&lt;/p&gt;

&lt;p&gt;A ticket was opened on May 23, 2017 for disconnection of service. Here’s where the meaty part begins.&lt;/p&gt;

&lt;h2 id=&quot;the-act-fibernet-disconnection-of-service-experience&quot;&gt;The ACT Fibernet Disconnection of Service Experience&lt;/h2&gt;

&lt;p&gt;Oh boy.&lt;/p&gt;

&lt;p&gt;After a ticket for broadband disconnection is opened, you will get a call from their “Retention Team” who will sell you on bullshit on why you should continue with their service and give them “one last chance” to fix the issue.&lt;/p&gt;

&lt;p&gt;You will also receive a call from their Backend LEAD engineer who will swear to make sure that you never face any service issues in the future.&lt;/p&gt;

&lt;p&gt;If you have chosen to ignore all these people, then you will get a call from the Field Engineer who will close your ticket saying that the issue has been resolved.&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/SqmkZ5IdwzTP2&quot; width=&quot;480&quot; height=&quot;394&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/reaction-what-despicable-me-SqmkZ5IdwzTP2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;THE TICKET WAS FOR DISCONNECTION, NOT SLOW SPEED OR OTHER PETTY ISSUES.&lt;/p&gt;

&lt;p&gt;So I called him up and this guy was a piece of work. He told me that the ticket that was opened was in fact for slow speed and NOT for disconnection. Technically speaking, I had wasted about a week on a ticket that was not open for Disconnection, but for Slow speed issues.&lt;/p&gt;

&lt;p&gt;THEN WHY THE FUCK DID THE RETENTION TEAM CALL ME TO CONTINUE THE SERVICE?&lt;/p&gt;

&lt;p&gt;Fine. I’m still calm. I called up Customer Service again and made sure that the ticket was indeed for disconnection of service. I was convinced that it was and happily went about my day. Everything was fine. I could see beautiful flowers again, hear the birds chirping.&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/HP5dest4oOHf2&quot; width=&quot;480&quot; height=&quot;269&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/reactiongifs-HP5dest4oOHf2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;THE TICKET WAS FOR SLOW SPEED. AGAIN.&lt;/p&gt;

&lt;p&gt;I lost it. You see I had already paid annually and I wanted to disconnect the service before I got charged for another month. Trust me, we’ve not even gotten to the refunds section.&lt;/p&gt;

&lt;p&gt;I called the Field Engineer again. He ignored my call. I called him again. Ignored.&lt;/p&gt;

&lt;p&gt;FUCK HIM. I set up a Twilio account and wrote a small script to call his number every 10 minutes.&lt;/p&gt;

&lt;p&gt;After 163 calls, he picked up - irritated and all. How cute. I told him to disconnect my service ASAP so that I can process my refund. You see, your refund isn’t processed unless the status of your connection is set to DISCONNECTED in their system. These mindless calls from the retention team and field engineers is just to throw you off balance.&lt;/p&gt;

&lt;p&gt;BUT I AIN’T BUDGING.&lt;/p&gt;

&lt;p&gt;So I opened YET another ticket for disconnection and this time in the SMS that gets sent, it indeed mentioned BROADBAD-DISCONNECTION specifically.&lt;/p&gt;

&lt;p&gt;The big vein in my head underneath the fat had almost popped until I saw that message.&lt;/p&gt;

&lt;p&gt;Here’s another interesting thing you might want to know. Turns out that their backend team DOES NOT process the disconnection until that disconnection ticket has been closed.&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/l0Iy9D4PZKRZ6chcQ&quot; width=&quot;480&quot; height=&quot;360&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/reactionseditor-l0Iy9D4PZKRZ6chcQ&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY THE FUCK DO YOU OPEN THE TICKET THEN?&lt;/p&gt;

&lt;p&gt;Imagine two weeks of back and forth of me opening the ticket and them closing the ticket when finally someone from the customer care called and told me about this absurd procedure.&lt;/p&gt;

&lt;p&gt;The ticket was closed. IT’S NOT OVER YET.&lt;/p&gt;

&lt;p&gt;I got a call from the Retention team YET again. My brain was fried in so many ways, I bet KFC would have patented it.&lt;/p&gt;

&lt;p&gt;I finally looked up to the internet to get some help and I found all sorts of complaints from people about their shitty service. Things like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/act-fibernet-horrible-experience/review-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/act-fibernet-horrible-experience/review-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/act-fibernet-horrible-experience/review-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/act-fibernet-horrible-experience/review-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-consumer-court-threat&quot;&gt;The Consumer Court Threat&lt;/h2&gt;

&lt;p&gt;At this point, it has been 3 weeks of back and forth and regular calls to their shitty customer care and I finally decided that I wanted to take legal action. I didn’t care how much time it took, but I wanted to get this stuff over with.&lt;/p&gt;

&lt;p&gt;So I sent an intimation email to them, as is required before filing for a Consumer Court Case. I sent the email on a Friday. I got a reply back on the same day itself.&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/lA3qoZE4TKQhi&quot; width=&quot;480&quot; height=&quot;232&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/lA3qoZE4TKQhi&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WELL HELLO THERE.&lt;/p&gt;

&lt;p&gt;Turns out that legal cases do scare the shit out of them. And this happened a day later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog/act-fibernet-horrible-experience/disconnection.png&quot; style=&quot;height: 500px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And this happened after 3 days.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog/act-fibernet-horrible-experience/refund.png&quot; style=&quot;height: 500px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After 3 weeks of constant calling and headaches with this ISP, I finally got my money back.&lt;/p&gt;

&lt;p&gt;I am now with Hathaway and they are doing a splendid job. I don’t have any connectivity issues with them and their speed is on point.&lt;/p&gt;

&lt;p&gt;I hope this post has given you some insight on things to consider while choosing an ISP. DON’T CHOOSE ACT.&lt;/p&gt;</content><author><name></name></author><summary type="html">Note: Contains more cursing than usual. Reader discretion is advised.</summary></entry><entry><title type="html">Rewrite WordPress Multisites</title><link href="https://kunalnagar.in/blog/rewrite-wordpress-multisites/" rel="alternate" type="text/html" title="Rewrite WordPress Multisites" /><published>2016-09-17T00:00:00+05:30</published><updated>2016-09-17T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/rewrite-wordpress-multisites</id><content type="html" xml:base="https://kunalnagar.in/blog/rewrite-wordpress-multisites/">&lt;p&gt;Recently, one of my tasks was to create a Blog and a Knowledge Base and use similar credentials and login-flows for both of their Admin Consoles. Without a doubt, &lt;a href=&quot;https://codex.wordpress.org/Create_A_Network&quot;&gt;WordPress Multisite&lt;/a&gt; is the perfect choice for this since you don’t have to manage your Auth/Settings/Dashboard in multiple places.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;&lt;b&gt;Note:&lt;/b&gt; Creating WordPress multisites is out of the scope of this article. For more info, check out &lt;a href=&quot;https://codex.wordpress.org/Create_A_Network&quot;&gt;this link&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;When you set up a WordPress Multisite install, you create one root site and then all other multisites are created as subfolders (children). For example, you may end up with something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;http://localhost/blog/ # Root Site
http://localhost/blog/knowledgebase/ # Multisite 1
http://localhost/blog/site/ # Multisite 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, this is not ideal, you would ideally want something like this, i.e. each multisite at the same level as the root site (blog):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;http://localhost/blog/
http://localhost/knowledgebase/
http://localhost/site/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It turns out – you can easily do this in 3 steps:&lt;/p&gt;

&lt;h2 id=&quot;step-1-create-a-root-level-htaccess&quot;&gt;Step 1: Create a root level .htaccess&lt;/h2&gt;

&lt;p&gt;We need to intercept all request to multisites and then rewrite them to their original URLs.&lt;/p&gt;

&lt;p&gt;Please note that this is NOT a redirect, but a rewrite. There’s a &lt;a href=&quot;http://weblogs.asp.net/owscott/rewrite-vs-redirect-what-s-the-difference&quot;&gt;difference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Moving along – create an .htaccess file in the root. If you’re using something like XAMPP, create it in the &lt;b&gt;htdocs&lt;/b&gt; folder:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;# Root Level .htaccess

RewriteEngine On
RewriteBase /

# Redirect knowledgebase to knowledgebase/
RewriteRule knowledgebase$ knowledgebase/ [R=301,L]

# Intercept all requests coming to http://localhost/knowledgebase
RewriteCond %{REQUEST_URI} /knowledgebase

# Rewrite the intercepted requests to
# /knowledgebase/anything-here from /blog/knowledgebase/anything-here
RewriteRule ^knowledgebase/(.*) blog/knowledgebase/$1 [L]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;step-2-update-the-database&quot;&gt;Step 2: Update the Database&lt;/h2&gt;

&lt;p&gt;Just rewriting in the &lt;b&gt;.htaccess&lt;/b&gt; is not going to cut it for us. There are some entries in the Database that we need to change:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;-- Update wp_blogs table to remove /blog from the path
UPDATE wp_blogs SET path=&quot;/knowledgebase/&quot; WHERE path=&quot;/blog/knowledgebase/&quot;;

-- Update wp_SITE_ID_options siteurl to remove /blog in the URL
UPDATE wp_2_options SET option_value=&quot;http://localhost/knowledgebase&quot; WHERE option_name=&quot;siteurl&quot;;

-- Update wp_SITE_ID_options home to remove /blog in the URL
UPDATE wp_2_options SET option_value=&quot;http://localhost/knowledgebase&quot; WHERE option_name=&quot;home&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;step-3-handle-cookiessessions&quot;&gt;Step 3: Handle cookies/sessions&lt;/h2&gt;

&lt;p&gt;Now, we need to handle cookies/sessions since our URLs have changed. Paste the following lines in the &lt;b&gt;wp-config.php&lt;/b&gt; file below the multisite lines:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;define('ADMIN_COOKIE_PATH', '/');
define('COOKIE_DOMAIN', '');
define('COOKIEPATH', '');
define('SITECOOKIEPATH', '');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;And we’re done!&lt;/b&gt; Visit your new multisite URL: &lt;a href=&quot;&quot;&gt;http://localhost/knowledgebase&lt;/a&gt; and you should be good to go!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; For adding more multisites, add a necessary rule in &lt;b&gt;Step 1&lt;/b&gt; and update the necessary tables in &lt;b&gt;Step 2&lt;/b&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Recently, one of my tasks was to create a Blog and a Knowledge Base and use similar credentials and login-flows for both of their Admin Consoles. Without a doubt, WordPress Multisite is the perfect choice for this since you don’t have to manage your Auth/Settings/Dashboard in multiple places.</summary></entry><entry><title type="html">Shared Modules using RequireJS</title><link href="https://kunalnagar.in/blog/shared-modules-using-requirejs/" rel="alternate" type="text/html" title="Shared Modules using RequireJS" /><published>2016-09-10T00:00:00+05:30</published><updated>2016-09-10T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/shared-modules-using-requirejs</id><content type="html" xml:base="https://kunalnagar.in/blog/shared-modules-using-requirejs/">&lt;p&gt;Every application needs a set of modules that are shared across all other modules. Things like String/Array helpers, Loggers etc are used across your application and it makes sense to create wrappers around them and expose them via a Common Module.&lt;/p&gt;

&lt;p&gt;Before we start, I’m assuming that you know a bit about RequireJS. If not, I suggest you visit their &lt;a href=&quot;http://requirejs.org/&quot;&gt;website&lt;/a&gt; and learn about &lt;a href=&quot;http://requirejs.org/docs/whyamd.html&quot;&gt;AMD (Asynchronous Module Definition)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the basic folder structure that we’re going to follow. I’ll explain this in detail below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/shared-modules-using-requirejs/requirejs-1.png&quot; alt=&quot;Folder Structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The common folder contains the individual common modules like Logger, Modal and Tabs.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;logger.js&lt;/b&gt; - may contain code to output/log code either to the Console or to a third party tool like &lt;a href=&quot;https://logentries.com/&quot;&gt;Logentries&lt;/a&gt; or &lt;a href=&quot;https://sentry.io/welcome/&quot;&gt;Sentry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;modal.js&lt;/b&gt; &amp;amp; &lt;b&gt;tabs.js&lt;/b&gt; - may contain code to initialise, destroy, center, show, hide modals/tabs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example of &lt;b&gt;logger.js&lt;/b&gt; that can be used to log messages. Note the use of the Singleton Pattern.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// logger.js
(function() {

    'use strict';

    define([], function() {

        var _logMessage = function(msg) {
            console.log(msg);
        };

        var _warnMessage = function(msg) {
            console.warn(msg);
        };

        var _errorMessage = function(msg) {
            console.error(msg);
        };

        return {
            log: _logMessage,
            warn: _warnMessage,
            error: _errorMessage
        };

    });
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, assume that we need to share this across different Modules (&lt;b&gt;module-1&lt;/b&gt;, &lt;b&gt;module-2&lt;/b&gt;, etc). Here is how we can do it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// module-1.js
(function() {

    'use strict';

    define(['./common/logger/logger'], function(Logger) {

        Logger.log('Hello World!');

        return {};

    });
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we need to share multiple common modules, we can do something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// module-2.js
(function() {

    'use strict';

    define([
        './common/logger/logger',
        './common/modal/modal'
    ], function(Logger, Modal) {

        Logger.log('Hello World!');

        Modal.init('INSERT_DIV_ID_HERE');
        Modal.center('INSERT_DIV_ID_HERE');

        return {};

    });
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, if you have a lot of common modules, the list can grow really big really fast. It helps to consolidate all these modules into a single Common Module. Something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// common.js
(function() {

    'use strict';

    define([
        './common/logger/logger',
        './common/modal/modal'
    ], function(Logger, Modal) {

        return {
            Logger: Logger,
            Modal: Modal
        };

    });
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then, you can just import the Common Module file and use the helper functions using the dot notation. Here is a quick example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// module-3.js
(function() {

    'use strict';

    define([
        './common/common',
    ], function(Helpers) {

        Helpers.Logger.log('Hello World!');
        Helpers.Modal.init('INSERT_DIV_ID_HERE');

        return {};

    });
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for taking the time to read this. Build something awesome!&lt;/p&gt;</content><author><name></name></author><summary type="html">Every application needs a set of modules that are shared across all other modules. Things like String/Array helpers, Loggers etc are used across your application and it makes sense to create wrappers around them and expose them via a Common Module.</summary></entry><entry><title type="html">GitHub Copy Path Widget using ZeroClipboard</title><link href="https://kunalnagar.in/blog/github-style-copy-path-zeroclipboard/" rel="alternate" type="text/html" title="GitHub Copy Path Widget using ZeroClipboard" /><published>2016-09-03T00:00:00+05:30</published><updated>2016-09-03T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/github-style-copy-path-zeroclipboard</id><content type="html" xml:base="https://kunalnagar.in/blog/github-style-copy-path-zeroclipboard/">&lt;p&gt;In this article, we will be creating the Clone Widget on GitHub that allows you to copy a Repo URL by clicking a button. It works natively in Chrome and falls back to Flash in Firefox &amp;amp; Safari. If Flash is not installed, the Copy button is not shown, but the user can still select the path and copy it manually.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/github-style-copy-path-zeroclipboard/zeroclipboard-1.png&quot; alt=&quot;ZeroClipboard in Chrome&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is how the widget looks natively in Chrome (Copy button enabled)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/github-style-copy-path-zeroclipboard/zeroclipboard-2.png&quot; alt=&quot;ZeroClipboard in Safari/Firefox&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is how the widget looks natively in Safari (Copy button disabled since Flash is not installed)&lt;/p&gt;

&lt;p&gt;We are going to be creating a similar widget with just the input text box and the copy button. Let’s see how it’s done.&lt;/p&gt;

&lt;h2 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/zeroclipboard/zeroclipboard&quot;&gt;ZeroClipboard&lt;/a&gt; For the actual copy task&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; For Visual Flair&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/&quot;&gt;FontAwesome&lt;/a&gt; For the Copy Icon&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1&quot;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;Here is the HTML that contains two copy widgets. We’re going to write code that works across multiple instances of the Widget.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;link href=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; /&amp;gt;
        &amp;lt;link href=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; /&amp;gt;
        &amp;lt;link href=&amp;quot;style.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; /&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;main-container&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;
                    &amp;lt;input class=&amp;quot;form-control copy-text&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;I am the copied text!&amp;quot; readonly /&amp;gt;
                    &amp;lt;span class=&amp;quot;input-group-btn&amp;quot;&amp;gt;
                        &amp;lt;button class=&amp;quot;btn btn-default btn-copy&amp;quot; type=&amp;quot;button&amp;quot;&amp;gt;
                            &amp;lt;i class=&amp;quot;fa fa-clipboard&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;Copy
                        &amp;lt;/button&amp;gt;
                    &amp;lt;/span&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;
                    &amp;lt;input class=&amp;quot;form-control copy-text&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;I am a different copied text!&amp;quot; readonly /&amp;gt;
                    &amp;lt;span class=&amp;quot;input-group-btn&amp;quot;&amp;gt;
                        &amp;lt;button class=&amp;quot;btn btn-default btn-copy&amp;quot; type=&amp;quot;button&amp;quot;&amp;gt;
                            &amp;lt;i class=&amp;quot;fa fa-clipboard&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;Copy
                        &amp;lt;/button&amp;gt;
                    &amp;lt;/span&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;lib/ZeroClipboard.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;step-2&quot;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Let’s start writing some JavaScript. Begin by checking if Flash is installed or not.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
// Check if Flash is installed or not
var _isFlashInstalled = function() {
    var hasFlash = false;
    try {
        var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
        if (fo) {
            hasFlash = true;
        }
    } catch (e) {
        if (navigator.mimeTypes
            &amp;amp;&amp;amp; navigator.mimeTypes['application/x-shockwave-flash'] != undefined
            &amp;amp;&amp;amp; navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin
        ) {
            hasFlash = true;
        }
    }
    return hasFlash;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;step-3&quot;&gt;Step 3&lt;/h2&gt;

&lt;p&gt;If Flash is installed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
// Fires when Flash is installed
var _initFlash = function() {

    // Create a client to work on. In our case, we've created
    // a client out of all the copy buttons
    var client = new ZeroClipboard($('.btn-copy'));

    // Fires when the client is ready
    client.on('ready', function(e) {

        // Create a tooltip that says &quot;Copy to Cliboard&quot;
        // when you hover over the Copy button
        $('.btn-copy').tooltip({
            placement: 'bottom',
            title: 'Copy to clipboard',
            container: 'body',
            trigger: 'manual'
        });

        // Enable the tooltip
        $('.btn-copy').hover(function() {
            $(this).tooltip('toggle');
        });
    });

    // Fires when the button has been clicked and the content
    // of the input box is being copied
    client.on('copy', function(e) {

        // Find the nearest input box and copy it's contents
        var val = $(e.target)
                    .closest('.input-group')
                    .find('.copy-text')
                    .val();
        e.clipboardData.setData('text/plain', val);
    });

    // Fires when the contents of the Input box have been copied
    client.on('aftercopy', function(e) {

        // Change the tooltip to say &quot;Copied!&quot;
        $(e.target)
            .attr('data-original-title', 'Copied!')
            .tooltip('fixTitle')
            .tooltip('show');

        // Reset the tooltip back to the original text
        setTimeout(function() {
            $(e.target)
                .attr('data-original-title', 'Copy to clipboard')
                .tooltip('fixTitle');
        }, 2000);
    });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If Flash is not insalled:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
// Fires when Flash is not installed.
var _initNoFlash = function() {

    // Hide the Copy Button
    $('.input-group-btn').hide();

    // Make the input text boxes full width
    $('.input-group').css({
        'width': '100%'
    });

    // Fix their border-radius properties
    $('.copy-text').css({
        'border-radius': '4px'
    });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, it all comes together in a single file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
(function() {

    'use strict';

    var App = function() {

        // Check if Flash is installed or not
        var _isFlashInstalled = function() {
            var hasFlash = false;
            try {
                var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
                if (fo) {
                    hasFlash = true;
                }
            } catch (e) {
                if (navigator.mimeTypes
                    &amp;amp;&amp;amp; navigator.mimeTypes['application/x-shockwave-flash'] != undefined
                    &amp;amp;&amp;amp; navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin
                ) {
                    hasFlash = true;
                }
            }
            return hasFlash;
        };

        // Fires when Flash is installed
        var _initFlash = function() {

            // Create a client to work on. In our case, we've created
            // a client out of all the copy buttons
            var client = new ZeroClipboard($('.btn-copy'));

            // Fires when the client is ready
            client.on('ready', function(e) {

                // Create a tooltip that says &quot;Copy to Cliboard&quot;
                // when you hover over the Copy button
                $('.btn-copy').tooltip({
                    placement: 'bottom',
                    title: 'Copy to clipboard',
                    container: 'body',
                    trigger: 'manual'
                });

                // Enable the tooltip
                $('.btn-copy').hover(function() {
                    $(this).tooltip('toggle');
                });
            });

            // Fires when the button has been clicked and the content
            // of the input box is being copied
            client.on('copy', function(e) {

                // Find the nearest input box and copy it's contents
                var val = $(e.target)
                            .closest('.input-group')
                            .find('.copy-text')
                            .val();
                e.clipboardData.setData('text/plain', val);
            });

            // Fires when the contents of the Input box have been copied
            client.on('aftercopy', function(e) {

                // Change the tooltip to say &quot;Copied!&quot;
                $(e.target)
                    .attr('data-original-title', 'Copied!')
                    .tooltip('fixTitle')
                    .tooltip('show');

                // Reset the tooltip back to the original text
                setTimeout(function() {
                    $(e.target)
                        .attr('data-original-title', 'Copy to clipboard')
                        .tooltip('fixTitle');
                }, 2000);
            });
        };

        // Fires when Flash is not installed
        var _initNoFlash = function() {

            // Hide the Copy Button
            $('.input-group-btn').hide();

            // Make the input text boxes full width
            $('.input-group').css({
                'width': '100%'
            });

            // Fix their border-radius properties
            $('.copy-text').css({
                'border-radius': '4px'
            });
        };

        // Main init
        var _init = function() {
            if(_isFlashInstalled) {
                _initFlash();
            } else {
                _initNoFlash();
            }
        };

        return {
            init: _init
        }

    };

    $(function() {

        var app = new App();
        app.init();

    });

})();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;download--demo&quot;&gt;Download &amp;amp; Demo&lt;/h2&gt;

&lt;p&gt;The code is readily available for your perusal on GitHub. Please note that I would have given a CodePen/JSFiddle link, but their sandboxing policies don’t allow ZeroClipboard to function at full capacity in all browsers while editing code.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/kunalnagar/zeroclipboard-demo&quot;&gt;https://github.com/kunalnagar/zeroclipboard-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo: &lt;a href=&quot;https://kunalnagar.github.io/zeroclipboard-demo/&quot;&gt;https://kunalnagar.github.io/zeroclipboard-demo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions, please fire away in the comments below. Thanks!&lt;/p&gt;</content><author><name></name></author><summary type="html">In this article, we will be creating the Clone Widget on GitHub that allows you to copy a Repo URL by clicking a button. It works natively in Chrome and falls back to Flash in Firefox &amp;amp; Safari. If Flash is not installed, the Copy button is not shown, but the user can still select the path and copy it manually.</summary></entry><entry><title type="html">TripMode - Your Mobile Data Savior</title><link href="https://kunalnagar.in/blog/tripmode-mobile-data-savior/" rel="alternate" type="text/html" title="TripMode - Your Mobile Data Savior" /><published>2016-08-24T00:00:00+05:30</published><updated>2016-08-24T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/tripmode-mobile-data-savior</id><content type="html" xml:base="https://kunalnagar.in/blog/tripmode-mobile-data-savior/">&lt;p&gt;TripMode is the best way to stop updates and other background processes from consuming your mobile data. It’s the perfect companion for people who travel a lot and need to keep their mobile data under control.&lt;/p&gt;

&lt;p&gt;TripMode automatically reduces your mobile data consumption when you use a mobile hotspot thus saving you data and money. It has been designed to be as simple as possible and is accessible at any time from the system tray.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/tripmode-mobile-data-savior/tripmode-1.jpg&quot; alt=&quot;TripMode for Mac&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/tripmode-mobile-data-savior/tripmode-2.jpg&quot; alt=&quot;TripMode for Windows&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;p&gt;TripMode primarily has three features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It blocks Internet access, to prevent unwanted traffic. All apps are blocked when TripMode is on. Only the ones that are selected by the user can access the Internet.&lt;/li&gt;
  &lt;li&gt;It is turned on automatically. Only when it is needed. TripMode remembers which networks it was activated on before, and enables itself automatically when the user is connected to it. No need to dig in menus.&lt;/li&gt;
  &lt;li&gt;It measures the quantity of traffic, to always stay informed. Keeping track of data consumption is key with limited data plans. TripMode displays the MB consumed per app and in total for the session, day or month.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TripMode for Windows has its user interface optimized for the Windows versions it’s running on, enabling users with touch-tablets to easily interact with the app for example.&lt;/p&gt;

&lt;h2 id=&quot;pricing--availability&quot;&gt;Pricing &amp;amp; Availability&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Compatible with Microsoft Windows 10, 8.1 and 7.&lt;/li&gt;
  &lt;li&gt;Paid version: &lt;b&gt;$7.99&lt;/b&gt; VAT incl.&lt;/li&gt;
  &lt;li&gt;Trial version: Unlimited 7-Days Trial. After the trial is over, users can keep using TripMode for a maximum of 15 min per day. Made for light users.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, check out their &lt;a href=&quot;http://www.tripmode.ch/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">TripMode is the best way to stop updates and other background processes from consuming your mobile data. It’s the perfect companion for people who travel a lot and need to keep their mobile data under control.</summary></entry><entry><title type="html">Bartender 2 for Mac OS X</title><link href="https://kunalnagar.in/blog/mac-bartender-os-x-menu-bar-minimalism/" rel="alternate" type="text/html" title="Bartender 2 for Mac OS X" /><published>2016-02-14T00:00:00+05:30</published><updated>2016-02-14T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/mac-bartender-os-x-menu-bar-minimalism</id><content type="html" xml:base="https://kunalnagar.in/blog/mac-bartender-os-x-menu-bar-minimalism/">&lt;p&gt;Bartender 2 for Mac OS X is an amazing piece of software that allows you to de-clutter your OS X Menu Bar. You can organise your menu bar apps by moving or rearranging them or moving them to the Bartender Bar.&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;p&gt;Here are some of the top features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lets you tidy your menu bar apps how you want.&lt;/li&gt;
  &lt;li&gt;See your menu bar apps when you want.&lt;/li&gt;
  &lt;li&gt;Hide the apps you need to run, but do not need to see.&lt;/li&gt;
  &lt;li&gt;Have the clean looking menu bar you want.&lt;/li&gt;
  &lt;li&gt;Re-arrange the menu bar items as you wish.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;take-control-of-your-menu-bar&quot;&gt;Take Control of your Menu Bar&lt;/h2&gt;

&lt;p&gt;Bartender allows you to choose which apps stay in the menu bar and which apps are hidden under the Bartender Bar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/mac-bartender-os-x-menu-bar-minimalism/bartender-1.png&quot; alt=&quot;Cleaned up Mac OS X Menu Bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bartender-bar&quot;&gt;Bartender Bar&lt;/h2&gt;

&lt;p&gt;Clicking on the Bartender icon will reveal the Bartender Bar. You can also assign a Hotkey to it like Alfred.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/mac-bartender-os-x-menu-bar-minimalism/bartender-2.png&quot; alt=&quot;Bartender Bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;other-features&quot;&gt;Other Features&lt;/h2&gt;

&lt;p&gt;Here are some additional features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recently updated apps with a notification will be shown outside the Bartender Bar (if hidden) for a certain amount of time that can be configured.&lt;/li&gt;
  &lt;li&gt;Re-order all your menu bar items.&lt;/li&gt;
  &lt;li&gt;Bartender Bar can be placed anywhere you want.&lt;/li&gt;
  &lt;li&gt;It even hides the Notification Centre Icon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has also been featured in popular blogs such as &lt;a href=&quot;http://www.macstories.net/roundups/my-must-have-mac-apps-2012-edition/&quot;&gt;MacStories&lt;/a&gt; and &lt;a href=&quot;http://www.macworld.com/article/2023414/favorite-mac-gems-of-2012.html&quot;&gt;MacWorld&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pricing&quot;&gt;Pricing&lt;/h2&gt;

&lt;p&gt;Bartender 2 is free to download for try for 4 weeks. After that, you need to purchase the full version which costs &lt;strong&gt;$15&lt;/strong&gt; and I highly recommend that you buy it if you like a clean minimal OS X Menu Bar.&lt;/p&gt;

&lt;p&gt;For more information, please visit the &lt;a href=&quot;http://www.macbartender.com/&quot;&gt;official site&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Bartender 2 for Mac OS X is an amazing piece of software that allows you to de-clutter your OS X Menu Bar. You can organise your menu bar apps by moving or rearranging them or moving them to the Bartender Bar.</summary></entry><entry><title type="html">Browse YouTube like a boss</title><link href="https://kunalnagar.in/blog/chrome-extension-youtube-jukebox/" rel="alternate" type="text/html" title="Browse YouTube like a boss" /><published>2015-10-18T00:00:00+05:30</published><updated>2015-10-18T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/chrome-extension-youtube-jukebox</id><content type="html" xml:base="https://kunalnagar.in/blog/chrome-extension-youtube-jukebox/">&lt;p&gt;&lt;b&gt;Disclaimer:&lt;/b&gt; This extension does not work with the latest YouTube layout. I plan on updating the Chrome Extension soon.&lt;/p&gt;

&lt;p&gt;YouTube is great. I use it all the time to learn, relax, listen to music and probably have a laugh or two. So I built a Chrome Extension that is a lighter version of YouTube Playlists.&lt;/p&gt;

&lt;p&gt;It adds two things to youtube.com:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An “Add to Jukebox” button next to every video&lt;/li&gt;
  &lt;li&gt;A Sidebar for consuming videos and making a list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As soon as you activate the extension, you’ll see an “Add to Jukebox” button next to every video on YouTube.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/chrome-extension-youtube-jukebox/yt-jukebox-1.png&quot; alt=&quot;Add to Jukebox Button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just click on it and the video will be automatically added to the Jukebox sidebar. You can continue adding more videos or just browse YouTube while the video keeps playing in the sidebar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/chrome-extension-youtube-jukebox/yt-jukebox-2.png&quot; alt=&quot;YouTube Jukebox Sidebar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Videos are saved so even if you refresh the page, they will still be visible in the list unless you explicitly delete them. Each video gets a play button, trash and repeat button. When you click on the video, it starts playing and the status is denoted by a green line next to the video.&lt;/p&gt;

&lt;p&gt;You can find the Add to Jukebox button on indvidual videos, search results, your YouTube home page and many more. It’s everywhere.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/chrome-extension-youtube-jukebox/yt-jukebox-3.png&quot; alt=&quot;YouTube Jukebox Single Video&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/chrome-extension-youtube-jukebox/yt-jukebox-4.png&quot; alt=&quot;YouTube Jukebox Search Results&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/chrome-extension-youtube-jukebox/yt-jukebox-5.png&quot; alt=&quot;YouTube Jukebox Home Page&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;It’s free and you can download it &lt;a href=&quot;https://chrome.google.com/webstore/detail/youtube-jukebox/hdncjkfadfcjifpibmgpmcldjdmemkcd?hl=en-US&amp;amp;gl=IN&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=wrkE5Aci5CI&quot;&gt;Watch&lt;/a&gt; on YouTube&lt;/p&gt;</content><author><name></name></author><summary type="html">Disclaimer: This extension does not work with the latest YouTube layout. I plan on updating the Chrome Extension soon.</summary></entry><entry><title type="html">Custom 404 Pro</title><link href="https://kunalnagar.in/blog/custom-404-pro/" rel="alternate" type="text/html" title="Custom 404 Pro" /><published>2015-04-22T00:00:00+05:30</published><updated>2015-04-22T00:00:00+05:30</updated><id>https://kunalnagar.in/blog/custom-404-pro</id><content type="html" xml:base="https://kunalnagar.in/blog/custom-404-pro/">&lt;p&gt;Custom 404 Pro is a WordPress plugin that allows users to override the default 404 page with any page from the WordPress Dashboard. You can even redirect users to a different URL everytime you get a 404. It has &lt;strong&gt;8,000+ active installs&lt;/strong&gt; as of August 2016.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-0.png&quot; alt=&quot;Active Installs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While this may sound trivial to many developers, I built this for people who are less technical and don’t know how to write PHP. It was one of my friends, actually, who gave me the idea as they weren’t able to figure this out.&lt;/p&gt;

&lt;h2 id=&quot;global-redirect-settings&quot;&gt;Global Redirect Settings&lt;/h2&gt;

&lt;p&gt;These settings apply to all Logs. For example, if you choose the URL option, the plugin will redirect any 404s to the URL you specify. Here is a screenshot of what I had when this Blog was still WordPress.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-1.png&quot; alt=&quot;Default Settings on kunalnagar.in&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A couple more options for you to choose from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;None (Do nothing)&lt;/li&gt;
  &lt;li&gt;WordPress Page (Select an already created Page)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-2.png&quot; alt=&quot;WordPress Page Redirect&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You also get a Log Viewer to see all the 404s that happened on your site. The plugin records the following data for every 404:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User IP Address&lt;/li&gt;
  &lt;li&gt;404 Path (The invalid URL that resulted in the 404)&lt;/li&gt;
  &lt;li&gt;User Agent (Browser Type, etc)&lt;/li&gt;
  &lt;li&gt;Global Settings Type&lt;/li&gt;
  &lt;li&gt;Date&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-3.png&quot; alt=&quot;Recording 404 Logs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is an option to filter the Logs as well. In the screenshot above, you can see the filters being chosen as Internet Explorer, v8.0, Operating System (Windows).&lt;/p&gt;

&lt;p&gt;You can also change the Settings for Individual Logs. For example, if the Global Settings say to redirect to a specific URL, you can set a specific 404 or Log to redirect to a specific URL just by editing the Log.&lt;/p&gt;

&lt;p&gt;For example, let’s take the following Log and edit it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-4.png&quot; alt=&quot;Edit Single Log&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-5.png&quot; alt=&quot;Log Custom Fields&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just enter the custom URL in the respective field and everytime a 404 happens on that path, it will redirect to the custom URL and override the Global Settings for this Log.&lt;/p&gt;

&lt;h2 id=&quot;general-settings&quot;&gt;General Settings&lt;/h2&gt;

&lt;p&gt;There are some general settings available with the plugin:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Email (sends an email to the Admin on every 404)&lt;/li&gt;
  &lt;li&gt;Clear Logs (helpful if you have tons of logs)&lt;/li&gt;
  &lt;li&gt;Logging Status (enabled/disabled)&lt;/li&gt;
  &lt;li&gt;Error Type (302/301/404)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/custom-404-pro/custom-404-pro-6.png&quot; alt=&quot;General Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There have been requests from users to record the 404 as a soft 302 or a 301 redirect. You can set that up here as well.&lt;/p&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;The plugin is free and you can download it &lt;a href=&quot;https://wordpress.org/plugins/custom-404-pro&quot;&gt;here&lt;/a&gt;. Please rate the plugin if you enjoyed using it.&lt;/p&gt;

&lt;p&gt;It is also open-sourced which means anyone can contribute. You can find the code on &lt;a href=&quot;https://github.com/kunalnagar/custom-404-pro&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Custom 404 Pro is a WordPress plugin that allows users to override the default 404 page with any page from the WordPress Dashboard. You can even redirect users to a different URL everytime you get a 404. It has 8,000+ active installs as of August 2016.</summary></entry></feed>